{
  "id": 2687,
  "project_id": 645,
  "upload_types": [
    "zip",
    "repo"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(js|css|py|html|htm|sql|swift|java|txt|gradle|xml|rst|yml|yaml|rmd|pdf|docx|h|H|hh|hxx|h\\+\\+|c|C|cc|cpp|cxx|c\\+\\+)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2019-09-04T22:19:28.670Z",
  "updated_at": "2020-10-10T11:19:39.919Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "available_for_cert_project": false,
  "language": "en-us",
  "ndkeys": [
    "nd213",
    "nd213-beta",
    "nd213-ent",
    "nd213-cn",
    "nd213-connect"
  ],
  "coursekeys": [],
  "is_career": false,
  "sections": [
    {
      "id": 5747,
      "name": "Quality of Code",
      "created_at": "2019-09-04T22:19:37.316Z",
      "updated_at": "2019-09-05T00:36:15.584Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 2687,
      "rubric_items": [
        {
          "id": 16480,
          "section_id": 5747,
          "passed_description": "The code compiles and runs with `cmake` and `make`.",
          "exceeded_description": "",
          "created_at": "2019-09-05T00:36:15.779Z",
          "updated_at": "2019-09-25T18:15:05.409Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Is the code functional?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5748,
      "name": "Task 1: Exclusive Ownership 1",
      "created_at": "2019-09-05T00:36:59.392Z",
      "updated_at": "2019-10-01T16:48:30.264Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 2687,
      "rubric_items": [
        {
          "id": 16548,
          "section_id": 5748,
          "passed_description": "In file `chatgui.h` / `chatgui.cpp`,  `_chatLogic` is made an exclusive resource to class `ChatbotPanelDialog` using an appropriate smart pointer. Where required, changes are made to the code such that data structures and function parameters reflect the new structure.",
          "exceeded_description": "",
          "created_at": "2019-09-18T18:36:14.014Z",
          "updated_at": "2019-10-01T17:07:55.811Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "`_chatLogic` is an exclusive resource of `ChatbotPanelDialog`",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5751,
      "name": "Task 2: The Rule of Five",
      "created_at": "2019-09-05T16:56:12.667Z",
      "updated_at": "2019-10-01T16:51:52.286Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 2687,
      "rubric_items": [
        {
          "id": 16488,
          "section_id": 5751,
          "passed_description": "In file `chatbot.h` / `chatbot.cpp`, changes are made to the class `ChatBot` such that it complies with the Rule of Five. Memory resources are properly allocated / deallocated on the heap and member data is copied where it makes sense.  In each of the methods (e.g. the copy constructor), a string of the type \"ChatBot Copy Constructor\" is printed to the console so that it is possible to see which method is called in later examples.",
          "exceeded_description": "",
          "created_at": "2019-09-05T16:56:22.267Z",
          "updated_at": "2019-10-01T17:12:33.835Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Class design meets the Rule of Five guidelines.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5782,
      "name": "Task 3: Exclusive Ownership 2",
      "created_at": "2019-10-01T16:48:37.050Z",
      "updated_at": "2019-10-01T16:49:02.528Z",
      "deleted_at": null,
      "position": 3,
      "rubric_id": 2687,
      "rubric_items": [
        {
          "id": 16570,
          "section_id": 5782,
          "passed_description": "In file `chatlogic.h` / `chatlogic.cpp`, the vector `_nodes` are adapted in a way that the instances of `GraphNodes` to which the vector elements refer are exclusively owned by the class `ChatLogic`.  An appropriate type of smart pointer is used to achieve this. ",
          "exceeded_description": null,
          "created_at": "2019-10-01T16:49:02.869Z",
          "updated_at": "2019-10-01T16:50:48.673Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "The `GraphNode`s in the vector `_nodes` are exclusively owned by the class `ChatLogic`.",
          "exceedable": false
        },
        {
          "id": 16571,
          "section_id": 5782,
          "passed_description": "When passing the `GraphNode` instances to functions, ownership is not transferred.",
          "exceeded_description": null,
          "created_at": "2019-10-01T16:50:48.944Z",
          "updated_at": "2019-10-01T16:51:07.351Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "`GraphNode` ownership is not transferred when passing instances.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5749,
      "name": "Task 4: Moving Smart Pointers",
      "created_at": "2019-09-05T00:48:26.269Z",
      "updated_at": "2019-10-01T16:56:41.756Z",
      "deleted_at": null,
      "position": 4,
      "rubric_id": 2687,
      "rubric_items": [
        {
          "id": 16574,
          "section_id": 5749,
          "passed_description": "In files `chatlogic.h` / `chatlogic.cpp` and `graphnodes.h` / `graphnodes.cpp` all instances of `GraphEdge` are changed in a way such that each instance of `GraphNode` exclusively owns the outgoing `GraphEdges` and holds non-owning references to incoming `GraphEdges`. Appropriate smart pointers are used to do this. Where required, changes are made to the code such that data structures and function parameters reflect the changes.",
          "exceeded_description": null,
          "created_at": "2019-10-01T17:00:32.136Z",
          "updated_at": "2019-10-01T17:07:55.815Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "`GraphNode`s exclusively own the outgoing `GraphEdges` and hold non-owning references to incoming `GraphEdges`.",
          "exceedable": false
        },
        {
          "id": 16552,
          "section_id": 5749,
          "passed_description": "In files `chatlogic.h` / `chatlogic.cpp` and `graphnodes.h` / `graphnodes.cpp`, move semantics are used when transferring ownership from class `ChatLogic`, where all instances of `GraphEdge` are created, into instances of `GraphNode`.",
          "exceeded_description": "",
          "created_at": "2019-09-18T18:48:39.985Z",
          "updated_at": "2019-10-01T17:06:01.162Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Move semantics are used when transferring ownership from class `ChatLogic` into instances of `GraphNode`.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5783,
      "name": "Task 5: Moving the ChatBot",
      "created_at": "2019-10-01T16:52:29.475Z",
      "updated_at": "2019-10-01T16:56:41.761Z",
      "deleted_at": null,
      "position": 5,
      "rubric_id": 2687,
      "rubric_items": [
        {
          "id": 16572,
          "section_id": 5783,
          "passed_description": "In file `chatlogic.cpp`, a local `ChatBot` instance is created on the stack at the bottom of function `LoadAnswerGraphFromFile` and move semantics are used to pass the `ChatBot` instance into the root node.",
          "exceeded_description": null,
          "created_at": "2019-10-01T16:56:42.122Z",
          "updated_at": "2019-10-01T17:13:31.993Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Move semantics are used correctly with `ChatBot`.",
          "exceedable": false
        },
        {
          "id": 16573,
          "section_id": 5783,
          "passed_description": "`ChatLogic` has no ownership relation to the `ChatBot` instance and thus is no longer responsible for memory allocation and deallocation.",
          "exceeded_description": null,
          "created_at": "2019-10-01T16:58:45.422Z",
          "updated_at": "2019-10-01T16:58:58.610Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "`ChatLogic` has no ownership relation to the `ChatBot` instance.",
          "exceedable": false
        },
        {
          "id": 16575,
          "section_id": 5783,
          "passed_description": "When the program is executed, messages are printed to the console indicating which Rule of Five component of `ChatBot` is being called.",
          "exceeded_description": null,
          "created_at": "2019-10-01T17:08:37.470Z",
          "updated_at": "2019-10-01T17:09:13.767Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "The `Chatbot` prints output to indicate Rule of Five components.",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 645,
    "name": "Memory Management Chatbot",
    "nanodegree_key": "nd213",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 2899,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 9,
    "created_at": "2019-09-05T23:50:30.475Z",
    "updated_at": "2021-04-06T22:58:47.681Z",
    "price": "9.5",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}