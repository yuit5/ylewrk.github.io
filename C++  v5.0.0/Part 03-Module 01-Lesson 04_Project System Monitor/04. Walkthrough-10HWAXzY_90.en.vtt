WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.059
Here is our Udacity workspace and I actually am running

00:00:06.059 --> 00:00:12.585
Visual Studio Code in the workspace and this is the scaffolding code or the starter code.

00:00:12.585 --> 00:00:18.490
I'll expand Visual Studio Code just to make it a little easier to follow here.

00:00:19.129 --> 00:00:22.890
So this is what the code looks like when we pull it down from

00:00:22.890 --> 00:00:27.630
the repository and the code is organized in a few different subfolder.

00:00:27.629 --> 00:00:29.129
There's an images folder,

00:00:29.129 --> 00:00:32.949
this folder actually isn't all that relevant for the project,

00:00:32.950 --> 00:00:36.590
we store a couple of images here that make the ReadMe work nice.

00:00:36.590 --> 00:00:38.540
Otherwise, we're not really going to use it.

00:00:38.539 --> 00:00:42.464
The two folders that are more relevant are Include and Source,

00:00:42.465 --> 00:00:49.010
and these are pretty common directories for C++ project structures.

00:00:49.009 --> 00:00:53.178
They include directory has a number of.h files,

00:00:53.179 --> 00:00:56.465
these are header files that define interfaces.

00:00:56.465 --> 00:01:02.910
Then the source file or SRC directory has source code files,

00:01:02.909 --> 00:01:06.689
so.cpp files that define

00:01:06.689 --> 00:01:09.259
the implementation of lots of

00:01:09.260 --> 00:01:13.340
different classes and functions that are declared within the include file.

00:01:13.340 --> 00:01:15.079
So in the include directory,

00:01:15.079 --> 00:01:17.629
we will declare different classes and functions,

00:01:17.629 --> 00:01:19.280
and in the source directory,

00:01:19.280 --> 00:01:24.174
we will actually implement and define those different classes and functions.

00:01:24.174 --> 00:01:31.489
An example just to take a quick look might be for example, system.h.

00:01:31.489 --> 00:01:34.129
So you can see here we are declaring

00:01:34.129 --> 00:01:37.924
a class system and declaring the interface to that class.

00:01:37.924 --> 00:01:40.204
Then if we look at system.cpp,

00:01:40.204 --> 00:01:47.344
system.cpp has very bare bonds implementations or definitions of all of

00:01:47.344 --> 00:01:56.750
the class methods member functions that are declared in the header file,

00:01:56.750 --> 00:02:00.709
those are defined and implemented in system.cpp.

00:02:00.709 --> 00:02:03.259
You can also see here a lot of different todos,

00:02:03.260 --> 00:02:08.390
those todos are one of the main semantic markers that we've left in the project.

00:02:08.389 --> 00:02:10.939
All these different comments tell you what is

00:02:10.939 --> 00:02:14.104
left for you to do in order to complete the project.

00:02:14.104 --> 00:02:18.199
If we look at some different starter code,

00:02:18.199 --> 00:02:22.459
so for example the ncurses_display,

00:02:22.460 --> 00:02:24.930
there's nothing left for you to do here.

00:02:24.930 --> 00:02:28.210
If we open up the source code file as well,

00:02:28.210 --> 00:02:33.270
you can see there are some comments but all of this code is pretty much written up.

00:02:34.099 --> 00:02:36.954
You're welcome to change it if you'd like,

00:02:36.955 --> 00:02:41.110
but as far as the ncurses_display goes because we didn't want

00:02:41.110 --> 00:02:45.250
this project to get too bogged down in the details of ncurses,

00:02:45.250 --> 00:02:48.474
we've provided all of this to you and as long as

00:02:48.474 --> 00:02:53.764
your system and process objects behave as expected,

00:02:53.764 --> 00:02:57.819
then you shouldn't need to touch the ncurses_display code.

00:02:57.819 --> 00:03:01.359
If we look at a different file,

00:03:01.360 --> 00:03:07.510
say at linux_parser.h and linux_parser.cpp,

00:03:07.580 --> 00:03:11.710
you'll see that there are some functions that are marked as done.

00:03:11.710 --> 00:03:16.150
We've provided some example functions and mark them as done.

00:03:16.150 --> 00:03:18.469
This function is actually marked bonus because there's

00:03:18.469 --> 00:03:20.719
some interesting stuff that you could do here

00:03:20.719 --> 00:03:23.615
with this function and then lots of functions marked todo.

00:03:23.615 --> 00:03:25.939
Hopefully, those semantic markers give

00:03:25.939 --> 00:03:32.300
you a guide post

00:03:32.300 --> 00:03:37.890
or a suggestion about how to proceed with completing the project.

