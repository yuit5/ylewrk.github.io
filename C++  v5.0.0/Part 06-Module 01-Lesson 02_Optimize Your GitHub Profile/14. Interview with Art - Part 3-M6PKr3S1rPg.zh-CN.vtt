WEBVTT
Kind: captions
Language: zh-CN

00:00:00.270 --> 00:00:01.670
嗨 我们又见面了

00:00:01.670 --> 00:00:06.840
我一直在想 你们怎么知道某人是不是一位很好的合作者

00:00:06.840 --> 00:00:09.940
因为这些求职者在工作时

00:00:09.940 --> 00:00:14.510
必须在共享代码的基础上与其他人员合作

00:00:14.510 --> 00:00:18.327
那么 怎样才能通过 GitHub 个人资料知道

00:00:18.327 --> 00:00:19.292
某个人是否是一位很好的合作者

00:00:19.292 --> 00:00:22.838
我筛查求职者 判断他们是否能够在团队中

00:00:22.838 --> 00:00:26.384
也就是我们的团队中很好地工作的方法  是从 GitHub 个人资料中挑选出相关内容

00:00:26.384 --> 00:00:30.545
可以从他们曾经参与的仓库问题开始

00:00:30.545 --> 00:00:33.359
看看他们如何参与这些线程

00:00:33.359 --> 00:00:37.274
他们对 pull 请求是否做出了评论 等等

00:00:37.274 --> 00:00:40.021
了解他们如何与仓库中的其他工程师互动

00:00:40.021 --> 00:00:44.798
我尤其感兴趣的是

00:00:44.798 --> 00:00:49.295
他们对社区新成员是否有耐心

00:00:49.295 --> 00:00:53.931
然后 你可以扩大研究范围 查找是否有

00:00:53.931 --> 00:00:58.076
与仓库相关的互联网实时聊天渠道 查看相关日志

00:00:58.076 --> 00:01:02.361
判断他们是否乐于助人、和蔼、有耐心

00:01:02.361 --> 00:01:06.928
这是一个很重要的信号 因为 你最终真正想雇用的人员

00:01:06.928 --> 00:01:11.330
应该能够出色地完成工作并与你的团队密切配合

00:01:11.330 --> 00:01:13.973
所以 我花费大量时间做这件事情

00:01:13.973 --> 00:01:16.840
深入挖掘资料 看他们如何与其他工程师公开地互动

00:01:16.840 --> 00:01:17.680
就是这样

00:01:17.680 --> 00:01:21.781
当你讨论与其他工程师公开地互动时

00:01:21.781 --> 00:01:24.095
你是指开源项目 对吧

00:01:24.095 --> 00:01:28.533
从我的个人经验来看 工作涉及的数据库非常庞大

00:01:28.533 --> 00:01:32.100
而从事这项工作的所有其他人都非常厉害 这些很令人生畏

00:01:32.100 --> 00:01:36.960
所以 你将如何开始这项工作？

00:01:36.960 --> 00:01:40.776
对于将要实际参与这些开源项目的新手 你有什么建议？

00:01:40.776 --> 00:01:42.740
你提到的这点非常重要 Matt

00:01:42.740 --> 00:01:47.700
即使是我 也确实让人望而却步

00:01:47.700 --> 00:01:52.040
对于一个新项目的起步 我会去做并建议别人去做的事情

00:01:52.040 --> 00:01:56.937
是查阅一些文档 甚至包括 readme 文件

00:01:56.937 --> 00:02:00.690
我喜欢做的一件事情实际上是浏览 readme 文件 复制该项目

00:02:00.690 --> 00:02:04.560
按照 readme 文件中的步骤 尝试对其进行构建和运行

00:02:04.560 --> 00:02:07.904
然后 基于我发现的问题逐步理清项目

00:02:07.904 --> 00:02:10.190
或许 只需要对其略微更新

00:02:10.190 --> 00:02:12.950
提交一个 pull 请求 其中说明了对 readme 文件做出的若干变更

00:02:12.950 --> 00:02:14.255
那些变更建议几乎总是能够被接受

00:02:14.255 --> 00:02:16.500
这是开始项目的一个好方法

00:02:16.500 --> 00:02:18.750
我的意思是 你最终将要去实际纠正错误

00:02:18.750 --> 00:02:21.280
然后 或许实际上贡献一些功能 但一开始需要融入社区

00:02:21.280 --> 00:02:24.280
并克服觉得可怕的畏惧感

00:02:24.280 --> 00:02:26.780
因为有太多的代码 不知道应该从哪里开始

00:02:26.780 --> 00:02:29.670
我发现 贡献一些文档是个不错的开始方式

00:02:29.670 --> 00:02:30.170
很酷

