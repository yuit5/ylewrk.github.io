WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.009
Now, prior to C++ 11,

00:00:02.009 --> 00:00:04.859
the rule of three has been a recommendation to make sure that

00:00:04.860 --> 00:00:08.370
programmers would think consciously about memory management.

00:00:08.369 --> 00:00:09.929
When either the destructor,

00:00:09.929 --> 00:00:13.744
the copy constructor, or copy assignment operator was overloaded,

00:00:13.744 --> 00:00:16.320
the other two should be overloaded as well to ensure

00:00:16.320 --> 00:00:19.004
that allocated memory would be properly copied,

00:00:19.004 --> 00:00:22.518
and deallocated, and with the introduction of move semantics,

00:00:22.518 --> 00:00:25.309
the rule of three became the rule of five as you already know.

00:00:25.309 --> 00:00:27.599
Your task now will be to make changes to

00:00:27.600 --> 00:00:31.520
the class chatbot such that it complies with the rule of five,

00:00:31.519 --> 00:00:34.265
and later on the final project task number,

00:00:34.265 --> 00:00:36.424
I think it's five, the chatbot instance will be

00:00:36.424 --> 00:00:38.914
passed between graph nodes using move semantics.

00:00:38.914 --> 00:00:41.554
So the current task is a preparation for this.

00:00:41.554 --> 00:00:46.039
Please make sure to properly allocate and deallocate memory resources on the heap,

00:00:46.039 --> 00:00:51.019
and also copy member data where it makes sense to you as you seem it fit.

00:00:51.020 --> 00:00:54.620
Please also print a message to the console with an info about the method being called.

00:00:54.619 --> 00:00:56.869
For example, if a copy of constructor is called,

00:00:56.869 --> 00:00:59.109
or the move assignment operator is called,

00:00:59.109 --> 00:01:00.289
print it to the console.

00:01:00.289 --> 00:01:05.609
Later on this will help you to see if move semantics works correctly. So let's start.

