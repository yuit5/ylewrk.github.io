WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:05.000
Теперь я хочу пройти с вами в абсолютное содержание этого класса, которое называется A-Star.

00:00:05.000 --> 00:00:10.000
A-Star был изобретен Нельс Нельсоном в Стэнфорде много лет назад,

00:00:10.000 --> 00:00:14.000
и представляет собой вариант алгоритма поиска, что это более эффективно, чем расширяться с каждым узлом.

00:00:14.000 --> 00:00:19.000
Если вы получили до сих пор, и вы понимаете механизм поиска

00:00:19.000 --> 00:00:24.000
постепенным расширением узлов в открытом списке, A-star почти то же самое

00:00:24.000 --> 00:00:26.000
но не совсем.

00:00:26.000 --> 00:00:30.000
Чтобы проиллюстрировать A-star я буду использовать ту же сетку, как раньше

00:00:30.000 --> 00:00:33.000
но с другой конфигурацией препятствий.

00:00:33.000 --> 00:00:36.000
Это один из способов A-star который выполняется очень хорошо.

00:00:36.000 --> 00:00:39.000
Очевидно, что мы вынуждены спуститься сюда,

00:00:39.000 --> 00:00:43.000
но здесь нам еще предстоит искать оптимальный путь к цели.

00:00:43.000 --> 00:00:46.000
Здесь те же проблемы в коде; вы можете увидеть все их здесь.

00:00:46.000 --> 00:00:49.000
Начало набора сюда, цель набора здесь.

00:00:49.000 --> 00:00:56.000
Если я запускаю этот код и даю вам расширить список, те, что вы запрограммировали прежде,

00:00:56.000 --> 00:01:01.000
Вы увидите, что расширение идет вниз отсюда,

00:01:01.000 --> 00:01:06.000
но затем он расширяется в открытом пространстве.

00:01:06.000 --> 00:01:11.000
Диагонально она расширяется в открытом пространстве и до тех пор пока он, наконец, попадает в цель узла 15.

00:01:11.000 --> 00:01:14.000
Это заняло 16 разложений, чтобы добраться до этой точки.

00:01:14.000 --> 00:01:18.000
Позвольте мне теперь включить A-star и запустить код еще раз.

00:01:18.000 --> 00:01:24.000
То, что мы сейчас найдем это занимает всего 10 расширений, чтобы добраться до этой точки, от нуля до девяти здесь.

00:01:24.000 --> 00:01:28.000
Таким образом, расширяется до четырех, но затем он расширяется прямо к цели

00:01:28.000 --> 00:01:33.000
никогда не прикасается к этой области здесь, каким-то волшебным образом,

00:01:33.000 --> 00:01:37.000
что здесь на пути к цели будет больше, чем дальше.

00:01:37.000 --> 00:01:38.000
Теперь я не обманывал.

00:01:38.000 --> 00:01:40.000
Я не говорил, что есть прямой путь сюда.

00:01:40.000 --> 00:01:44.000
Итак, позвольте мне положить препятствие прямо здесь, рядом с целью и запустить A-star снова.

00:01:44.000 --> 00:01:47.000
Что вы найдете это расширить до семи здесь

00:01:47.000 --> 00:01:50.000
но потом переходит на вторую строку здесь,

00:01:50.000 --> 00:01:53.000
расширяется здесь, а затем попадает в цель еще раз.

00:01:53.000 --> 00:01:56.000
Таким образом, она как бы делает минимальный объем необходимых работ

00:01:56.000 --> 00:01:57.000
чтобы сделать максимальный прогресс к цели.

00:01:57.000 --> 00:02:01.000
Это A-star, и теперь мы смотрим на A-star более подробно.

00:02:01.000 --> 00:02:08.000
A-star использует так называемые эвристические функции, которая является функцией, которая должна быть создана.

00:02:08.000 --> 00:02:14.000
Если все нули, то A-star вернется к алгоритму поиска уже реализованного.

00:02:14.000 --> 00:02:21.000
Если мы называем эвристическую функцию h, то для каждой ячейки это приводит в стоимость.

00:02:21.000 --> 00:02:23.000
Итак, позвольте мне дать вам несколько значений.

00:02:23.000 --> 00:02:29.000
Вот один: его количество шагов, необходимое для цели, если не было никаких препятствий.

00:02:29.000 --> 00:02:34.000
Очевидно, что число я ставлю прямо сейчас, 1, 2, 3, 4, 5, и так далее,

00:02:34.000 --> 00:02:37.000
не отражают фактического расстояния до цели

00:02:37.000 --> 00:02:39.000
потому что они не считают препятствий.

00:02:39.000 --> 00:02:42.000
В мире без препятствий эвристические функции, которые я даю вам

00:02:42.000 --> 00:02:44.000
будут на самом деле измерять расстояние до цели.

00:02:44.000 --> 00:02:51.000
Таким образом, эвристическая функция должна оптимистично предположить, как далеко мы от цели.

00:02:51.000 --> 00:02:58.000
Таким образом, для любой клетки х у эвристическая функция должна быть оптимистичным предположением,

00:02:58.000 --> 00:03:04.000
что означает меньше или равна длине цели от координат х и у.

00:03:04.000 --> 00:03:06.000
Сейчас это звучит немного специально,

00:03:06.000 --> 00:03:09.000
но очень часто вы можете дать хорошие эвристические функции очень легко

00:03:09.000 --> 00:03:10.000
Как и в этом случае здесь.

00:03:10.000 --> 00:03:13.000
Если мы просто знаем, что агент может двигаться влево, вправо, вверх или вниз,

00:03:13.000 --> 00:03:17.000
это очень легко сказать, что есть ряд шагов, которые займет агента

00:03:17.000 --> 00:03:22.000
без каких-либо препятствий, чтобы добраться до цели, и что это за таблица здесь.

00:03:22.000 --> 00:03:25.000
Это легко генерируется автоматически.

00:03:25.000 --> 00:03:27.000
Сейчас на самом деле это занижены.

00:03:27.000 --> 00:03:33.000
Если препятствия, например, выглядеть так, то отсюда берет вас более чем на 9 шагов

00:03:33.000 --> 00:03:35.000
чтобы добраться до цели.

00:03:35.000 --> 00:03:38.000
Он отнимет у вас 13 шагов к более чем решающему моменту здесь.

00:03:38.000 --> 00:03:41.000
В этом и заключается красота эвристической функции.

00:03:41.000 --> 00:03:42.000
Она не должна быть точной.

00:03:42.000 --> 00:03:46.000
Если бы это была точно что вы уже решали задачи планирования.

00:03:46.000 --> 00:03:49.000
Там должна быть функция, которая поможет вам понять,

00:03:49.000 --> 00:03:51.000
где искать следующее в случае связей,

00:03:51.000 --> 00:03:57.000
и это должно быть именно так, что он недооценивает или в лучшем случае равна расстоянию от истинной цели.

00:03:57.000 --> 00:04:01.000
Многие, очень многие проблемы имеют такие функции, как это в наших автомобилях самостоятельного вождения.

00:04:01.000 --> 00:04:04.000
Мы используем функцию так же, как это, в самом деле я просто показываю вам функцию,

00:04:04.000 --> 00:04:07.000
мы используем в нашем программном обеспечении для свободной формы навигации.

00:04:07.000 --> 00:04:13.000
Она сводится к большому числу которые клетки шаги, но для евклидова расстояния до цели месте.

00:04:13.000 --> 00:04:16.000
Я надеюсь, вы понимаете, как эвристическая функция может выглядеть.

00:04:16.000 --> 00:04:20.000
Она имеет много, много значений эвристической функции, включая установку все к нулю,

00:04:20.000 --> 00:04:21.000
который не будет действительно помогать мне.

00:04:21.000 --> 00:04:23.000
Так что давайте работать с этой эвристической функции.

00:04:23.000 --> 00:04:26.000
Вот эвристические функции в коде.

00:04:26.000 --> 00:04:28.000
Вы можете видеть ту же эвристическую функцию.

00:04:28.000 --> 00:04:35.000
Ключевые модификации теперь для наших алгоритмов поиска очень, очень простые.

00:04:35.000 --> 00:04:41.000
У нам вновь есть список, и мы добавим наше положение, запишем г-значение,

00:04:41.000 --> 00:04:46.000
Но мы также запишем г-стоимость плюс эвристическое значение.

00:04:46.000 --> 00:04:50.000
G-значение здесь ноль; эвристическое значение равно 9.

00:04:50.000 --> 00:04:53.000
Таким образом, сумма двух равно 9, и я называю это F-значение.

00:04:53.000 --> 00:04:57.000
Это совокупность г-значение плюс эвристическое значение

00:04:57.000 --> 00:05:00.000
как в таблице здесь.

00:05:00.000 --> 00:05:07.000
Если я сейчас расширю, то я удалю элемент с наименьшим F-значением, а не наименьшее г-значение.

00:05:07.000 --> 00:05:08.000
Вот и все, что нужно для A-star.

00:05:08.000 --> 00:05:10.000
Позвольте мне привести вам пример.

00:05:10.000 --> 00:05:16.000
Скажем, мы пошли в список на всем пути сюда.

00:05:16.000 --> 00:05:19.000
То есть мы расширили все эти положения здесь,

00:05:19.000 --> 00:05:21.000
и это один присутствующий здесь в списке.

00:05:21.000 --> 00:05:24.000
Наше г-значение будет 5.

00:05:24.000 --> 00:05:30.000
Наша эвристическая функция будет 4, а сумма составляет 9, как раньше.

00:05:30.000 --> 00:05:33.000
Давайте теперь расширим этот узел.

00:05:33.000 --> 00:05:38.000
Мы добираемся до этого здесь, г-значение увеличивается до 6.

00:05:38.000 --> 00:05:44.000
G плюс эвристическая функция все еще будет 9.

00:05:44.000 --> 00:05:48.000
Теперь давайте расширим ее больше, и есть теперь два варианта в конце:

00:05:48.000 --> 00:05:51.000
Это состояние здесь и это состояние здесь.

00:05:51.000 --> 00:05:57.000
Тот, здесь называют 3 2, один по правую называют 4 3.

00:05:57.000 --> 00:06:00.000
Г-значение здесь, в обоих случаях равна 7,

00:06:00.000 --> 00:06:04.000
Но когда мы добавим h значение мы получаем разницу.

00:06:04.000 --> 00:06:07.000
Прям здесь мы находим h-значение в 4.

00:06:07.000 --> 00:06:11.000
Мы отошли немного в сторону от цели в соответствии с эвристической.

00:06:11.000 --> 00:06:14.000
Это дает нам всего 11.

00:06:14.000 --> 00:06:20.000
В то время как для подачи здесь мы находим h-значение равным 2.

00:06:20.000 --> 00:06:24.000
Вот в первый раз, что A-star делает фактические разницы.

00:06:24.000 --> 00:06:33.000
Он имеет предпочтение, чтобы расширить этот узел здесь над узлом здесь.

00:06:33.000 --> 00:06:40.000
Чтобы понять, почему F-значение, сумма g и h, здесь составляет 9, но здесь составляет 11.

00:06:40.000 --> 00:06:45.000
Что это отражается в соответствии с эвристическим,

00:06:45.000 --> 00:06:50.000
этот парень на самом деле на 2 шага ближе к цели, чем этот парень здесь.

00:06:50.000 --> 00:06:53.000
Этот парень, в соответствии с эвристическим, может быть, в 2 шагах от цели,

00:06:53.000 --> 00:06:56.000
и парень здесь не менее 4 шагов.

00:06:56.000 --> 00:07:03.000
A-star теперь будет расширять этот узел сюда, потому что его F-значение 9 и 11.

00:07:03.000 --> 00:07:06.000
Так давайте сделаем это.

00:07:06.000 --> 00:07:09.000
При расширении этого узла мы находим двоих действительных соседей:

00:07:09.000 --> 00:07:11.000
Парень здесь и парень справа.

00:07:11.000 --> 00:07:13.000
Координаты первого парня являются 3 3.

00:07:13.000 --> 00:07:15.000
Второй парень 4 4.

00:07:15.000 --> 00:07:18.000
Как и прежде, мы увеличиваем г-значение на единицу.

00:07:18.000 --> 00:07:20.000
Получается восемь в обоих случаях.

00:07:20.000 --> 00:07:31.000
Теперь мы добавим эвристическую функцию в г-значение, которое для первого здесь составляет 3;

00:07:31.000 --> 00:07:38.000
В то время как по правую мы получаем один, как эвристической функции.

00:07:38.000 --> 00:07:40.000
Это результат расширения узла сюда.

00:07:40.000 --> 00:07:44.000
Вот наш новый список, и опять у нас есть предпочтения.

00:07:44.000 --> 00:07:48.000
В списке этих трех положений, и мы предпочитаем один по правую

00:07:48.000 --> 00:07:52.000
потому, что его F-значение меньше, чем в двух других F-значениях.

00:07:52.000 --> 00:07:58.000
Здесь 9; вот здесь F-значение равно 11.

00:07:58.000 --> 00:08:02.000
Таким образом, мы снова расширяемся и в расширении станет задачей,

00:08:02.000 --> 00:08:09.000
и тогда мы находим поставленную цель, и мы сделали без постоянного расширения в лабиринте здесь.

00:08:09.000 --> 00:08:15.000
Чувствуется, как по волшебству, но главное здесь заключается в предоставлении дополнительной информации,

00:08:15.000 --> 00:08:18.000
так называемые эвристические функции, мы можем вести поиск.

00:08:18.000 --> 00:08:24.000
Когда у нас есть тупик, мы можем выбрать узел, который выглядит ближе к цели государства.

00:08:24.000 --> 09:59:59.000
В результате мы, вероятно, добились большего прогресса в достижении цели.

