WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.000
让我们来谈谈运动规划

00:00:03.000 --> 00:00:07.000
运动规划的根本问题在于机器人可能存在于一个这样的世界中

00:00:07.000 --> 00:00:11.000
它可能想找到一条到达这个目标的路径

00:00:11.000 --> 00:00:15.000
那么就需要制定一个到达那里的计划

00:00:15.000 --> 00:00:20.000
自动驾驶汽车也会遇到这个问题

00:00:20.000 --> 00:00:26.000
它可能处于高速公路附近的街道网络中

00:00:26.000 --> 00:00:34.000
它必须要找到他的路径并且导航到目标位置

00:00:34.000 --> 00:00:38.000
如果我们放大并且看看这个十字路口

00:00:38.000 --> 00:00:43.000
这是我渲染出来的最好的街道线环境

00:00:43.000 --> 00:00:45.000
我们在这里也会遇到规划问题

00:00:45.000 --> 00:00:50.000
想象一下一辆想从这里到这里的车

00:00:50.000 --> 00:00:53.000
需要在这个十字路口转左

00:00:53.000 --> 00:00:56.000
这辆车需要先转右

00:00:56.000 --> 00:01:01.000
变换一条车道然后转左 到达目标位置

00:01:01.000 --> 00:01:03.000
现在 在这里变换车道是一个冒险的方案

00:01:03.000 --> 00:01:05.000
如果有一辆大卡车停在这里

00:01:05.000 --> 00:01:08.000
这里的空间可能不足以完成变道

00:01:08.000 --> 00:01:15.000
一个可行的替代方案可能是直行到这里 绕着这个街区走

00:01:15.000 --> 00:01:18.000
然后直走到达目标位置

00:01:18.000 --> 00:01:22.000
查找起点到终点路径的过程

00:01:22.000 --> 00:01:25.000
称为规划

00:01:25.000 --> 00:01:28.000
对机器人而言 常称为机器人运动规划

00:01:28.000 --> 00:01:31.000
今天我将谈谈关于规划的离散方法

00:01:31.000 --> 00:01:34.000
在那里世界是分割成小块的

00:01:34.000 --> 00:01:39.000
下一节课我们将谈谈使用这些方法进行连续运动

00:01:39.000 --> 00:01:43.000
什么是规划问题 ? 我们有一个世界地图

00:01:43.000 --> 00:01:45.000
我们有一个起点

00:01:45.000 --> 00:01:48.000
我们有一个终点

00:01:48.000 --> 00:01:51.000
通常 我们还会得到某种成本函数

00:01:51.000 --> 00:01:56.000
考虑成本的最简单方式就是按某个路线行驶需要消耗的时间

00:01:56.000 --> 00:02:00.000
我们的目的是找到成本最小的路径

00:02:00.000 --> 00:02:04.000
在开始编程之前 让我问你几个问题

00:02:04.000 --> 99:59:59.999
关于路径成本最小化的

