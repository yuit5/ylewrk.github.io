{
  "data": {
    "lesson": {
      "id": 860825,
      "key": "6f43bf83-00a4-4293-b6f1-7753922bec07",
      "title": "Introduction to C++",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "C++ is one of the most important programming languages in the world. It is particularly important for high-performance software.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/6f43bf83-00a4-4293-b6f1-7753922bec07/860825/1615002883116/Introduction+to+C%2B%2B+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/6f43bf83-00a4-4293-b6f1-7753922bec07/860825/1615002880568/Introduction+to+C%2B%2B+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 860925,
          "key": "5edf171f-6c3b-4e52-8997-62e056d94396",
          "title": "C++",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5edf171f-6c3b-4e52-8997-62e056d94396",
            "completed_at": "2020-05-13T08:42:49.671Z",
            "last_viewed_at": "2020-05-13T08:42:44.414Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900202,
              "key": "a5e4acd5-d754-4254-a7a4-d8036964ad50",
              "title": "04 C V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "cpM5qolnCzQ",
                "china_cdn_id": "cpM5qolnCzQ.mp4"
              }
            }
          ]
        },
        {
          "id": 860926,
          "key": "372a8f53-2bd5-499c-8c32-7a00e02bd808",
          "title": "C++ History",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "372a8f53-2bd5-499c-8c32-7a00e02bd808",
            "completed_at": "2020-05-13T08:43:36.742Z",
            "last_viewed_at": "2020-05-13T08:43:31.413Z",
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900203,
              "key": "3831e5ff-4903-424f-8f5e-ab42f239758a",
              "title": "05 C   History V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "csHNDE4lmNQ",
                "china_cdn_id": "csHNDE4lmNQ.mp4"
              }
            }
          ]
        },
        {
          "id": 860927,
          "key": "51273bb8-8226-4d28-9345-33c1a74ad764",
          "title": "C++ Today",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "51273bb8-8226-4d28-9345-33c1a74ad764",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900204,
              "key": "554c4d82-0ad9-41dd-a830-6f59d70d6f45",
              "title": "06 C   Today V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "X1PbbZo7Qok",
                "china_cdn_id": "X1PbbZo7Qok.mp4"
              }
            }
          ]
        },
        {
          "id": 860928,
          "key": "3e1bde8d-8d3b-40fa-b944-612f083b328d",
          "title": "Modern C++",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "3e1bde8d-8d3b-40fa-b944-612f083b328d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900205,
              "key": "1ccd7c10-2617-49ab-8b32-7d9f33e50b64",
              "title": "07 Modern C   V1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "NGJGXh7r4HY",
                "china_cdn_id": "NGJGXh7r4HY.mp4"
              }
            }
          ]
        },
        {
          "id": 860930,
          "key": "ee3ed998-37f7-4654-89a4-e83b2a2a46af",
          "title": "C++ Core Guidelines",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ee3ed998-37f7-4654-89a4-e83b2a2a46af",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900210,
              "key": "5f5a7ec9-b5b9-4313-ad96-fcbc8bbcfbdd",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# C++ Core Guidelines\n",
              "instructor_notes": ""
            },
            {
              "id": 900211,
              "key": "f683b0c3-6edc-4580-97fd-4d2c74f70548",
              "title": "ND213 C01 Core Guidelines What Is The Orgin Of The C++ Core Guidelines-",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ksnW36h7e5Y",
                "china_cdn_id": "ksnW36h7e5Y.mp4"
              }
            },
            {
              "id": 900212,
              "key": "863a83e4-c8ea-4990-912e-078bc59eb0aa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "The [C++ Core Guidelines](https://github.com/isocpp/CppCoreGuidelines) are a set of best practices, recommendations, and rules for coding in C++ which have been developed by Bjarne Stroustrup and hundreds of other experts in the field. These guidelines are an important part of the language, as they help users to write the best, most up-to-date C++ possible. In the next couple of videos, Bjarne will talk about the origin of the guidelines and give some advice on how to use them.",
              "instructor_notes": ""
            },
            {
              "id": 900213,
              "key": "2e1ebed2-41b9-4528-9b42-4743be8b460d",
              "title": "ND213 C01 Core Guidelines How Should Programmers Use Core Guidelines-",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "BIvX0poJqIY",
                "china_cdn_id": "BIvX0poJqIY.mp4"
              }
            }
          ]
        },
        {
          "id": 860929,
          "key": "c459d67e-1a5f-41da-835e-f6c1be0f1b56",
          "title": "Standard Library",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c459d67e-1a5f-41da-835e-f6c1be0f1b56",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900209,
              "key": "a1893609-3a85-4b90-8481-2c1f190fe38e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Standard Library\n> \"The C++ Standard Library is a collection of classes and functions, which are written in the core language and part of the C++ ISO Standard itself.\" [_Wikipedia_](https://en.wikipedia.org/wiki/C%2B%2B_Standard_Library)\n\nLearning how to use the Standard Library is an important part of becoming a proficient C++ software engineer. In almost all cases, it is preferable to utilize functionality that already exists in the Standard Library, instead of implementing functionality from scratch. This is both because using the Standard Library is faster (it is [well-documented](http://www.cplusplus.com/reference/)) and because many expert software engineers have worked on the Standard Library. The performance of Standard Library facilities is optimized, robust, and almost always as fast or faster than an initial re-implementation of the same functionality.\n\nIn fact, guideline [SL.1](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#sl1--use-libraries-wherever-possible) of the [C++ Core Guidelines](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines) is:\n> **Use libraries wherever possible**\n>\n> *Reason* Save time. Don’t re-invent the wheel. Don’t replicate the work of others. Benefit from other people’s work when they make improvements. Help other people when you make improvements.\n\nAnd guideline [SL.2](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#sl2-prefer-the-standard-library-to-other-libraries) is:\n> **Prefer the standard library to other libraries**\n>\n> *Reason* More people know the standard library. It is more likely to be stable, well-maintained, and widely available than your own code or most other libraries.\n\nWe use Standard Library features throughout the program, since proficiency with the Standard Library is a critical for C++ developers.\n\n## Namespace\nStandard Library functions and classes exist in the `std::` namespace. [`std::vector`](http://www.cplusplus.com/reference/vector/), for example, refers to the `vector` class within the Standard Library. Typically, in order to use a Standard Library feature we must both include the necessary header file (e.g. `#include <vector>`) and also namespace the class with `std::` (e.g. `std::vector`).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 860932,
          "key": "a18235bb-9123-4059-a139-822d8efa76da",
          "title": "Compilation",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a18235bb-9123-4059-a139-822d8efa76da",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900206,
              "key": "2abe4083-11cb-443a-9556-3619b7fdfe0b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Compilers\nC++ is a compiled programming language, which means that programmers use a program to compile their human-readable source code into machine-readable [object](https://en.wikipedia.org/wiki/Object_file) and [executable](https://en.wikipedia.org/wiki/Executable) files. The program that performs this task is called a [compiler](https://en.wikipedia.org/wiki/Compiler).\n\nC++ does not have an \"official\" compiler. Instead, there are [many different compilers](http://www.stroustrup.com/compilers.html) that a programmer can use.\n\n## GNU Compiler Collection (GCC)\nIn this program we primarily use the [GNU Compiler Collection](https://gcc.gnu.org/), which is a popular, open-source, cross-platform compiler from the larger [GNU Project](https://www.gnu.org/gnu/thegnuproject.en.html). In particular, we use the [`g++`](https://gcc.gnu.org/onlinedocs/gcc/Invoking-G_002b_002b.html) program, which is a command line executable that compiles C++ source code and automatically [links](https://en.wikipedia.org/wiki/Linker_(computing%29) the [C++ Standard Library](http://www.cplusplus.com/reference/).\n\n## Linking\n",
              "instructor_notes": ""
            },
            {
              "id": 900207,
              "key": "6efca2fc-5250-4c3f-8b98-ebb0e3c9757a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/July/5d2a71f4_c-compilation-process/c-compilation-process.svg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/6efca2fc-5250-4c3f-8b98-ebb0e3c9757a",
              "caption": "C++ Compilation Process (Wikimedia)",
              "alt": "C++ Compilation Process Diagram",
              "width": 354,
              "height": 568,
              "instructor_notes": null
            },
            {
              "id": 900208,
              "key": "05717b3c-9305-4762-a2d6-48c5e89647af",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In order to use classes and functions from the [C++ Standard Library](http://www.cplusplus.com/reference/), the compiler must have access to a compiled version of the standard library, stored in object files. Most compiler implementations, including GCC, include those object files as part of the installation process. In order to use the Standard Library facilities, the compiler must [\"link\"]((https://en.wikipedia.org/wiki/Linker_(computing%29) the standard library object files to the object files created from the programmer's source code.\n\nOnce the compiler links together the necessary object files, it is able to generate a standalone executable file that can run on the operating system.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 860931,
          "key": "0dd18bf6-8e9a-40eb-a8b7-16e0ca3ce68f",
          "title": "Build Tools",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0dd18bf6-8e9a-40eb-a8b7-16e0ca3ce68f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900214,
              "key": "44ded3b3-1f27-4fc9-8245-d4c2741fe323",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Build Tools\n[Make](https://www.gnu.org/software/make/manual/html_node/index.html#Top) and [CMake](https://cmake.org/) are two separate and similar [build tools](https://en.wikipedia.org/wiki/Build_automation) that both serve to help simplify the process of [building](https://en.wikipedia.org/wiki/Software_build) software.\n\nIn particular, build tools automate the process of compiling multiple source code files into object files, linking those object files together, and generating an executable. Build tools also often automate the process of determining which files have changed since the last build and thus need to be recompiled.",
              "instructor_notes": ""
            },
            {
              "id": 900215,
              "key": "66b5f4cf-e59a-4d0f-bf78-66627355d3da",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/July/5d2a71f4_c-compilation-process/c-compilation-process.svg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/66b5f4cf-e59a-4d0f-bf78-66627355d3da",
              "caption": "C++ Build Process",
              "alt": "C++ Build Process Diagram: Preprocessing, Compiling, Linking",
              "width": 354,
              "height": 568,
              "instructor_notes": null
            },
            {
              "id": 900217,
              "key": "5db4da5d-20f4-4dea-a1a2-c61c5a05f886",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Make\n[GNU Make](https://www.gnu.org/software/make/manual/html_node/index.html#Top) is a widely-used build tool that relies on `Makefile`s to automate the process of building a project. \n\nA `Makefile` typically includes one or more \"targets\". Each target performs a different action. \n\n`build` is a common target name that is configured in the `Makefile` to compile all of the project's source code into an executable file. `clean`, on the other hand, is a common target to delete all object files and other artifacts of the build process, resulting in a clean, unbuilt project state. \n\nRunning either `make build` or `make clean` (or any other target) on the command line would cause Make to search for a local Makefile, search for a matching target within that Makefile, and then execute the target.\n\n## CMake\n[CMake](https://cmake.org/) is a built tool that facilitates cross-platform builds, so that it is straightforward to build the same source code on Linux, macOS, Windows, or any other operating system. CMake relies on a CMakeLists.txt file, which configures appropriate cross-platform targets.\n\nBuilding a `CMakeLists.txt` file can be a bit daunting, but CMake provides a helpful [tutorial](https://cmake.org/cmake-tutorial/).\n\nIn this Nanodegree program, you will not need to build your own `Makefile`s or `CMakeLists.txt` files. We provide the appropriate configuration files for each project and instruct you as to their usage.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 957711,
          "key": "20786212-ba41-4d84-84d0-2495087b8ec3",
          "title": "Installation",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "20786212-ba41-4d84-84d0-2495087b8ec3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 957712,
              "key": "c891a41d-2b13-4f8d-8cd9-ebfe9c36aea6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Installation\nYou are welcome to write all of your code in Udacity's web-based Workspaces. If, however, you prefer to work locally on your machine, you will need to install certain software.\n\n## g++, gdb, make  \n------\n### macOS\n\nmacOS includes g++ as part of Command Line Tools.\n- Launch **Terminal**, which can be found in the **Utilities** folder in **Applications**.\n- Type `xcode-select --install` into the Terminal window and press \"Enter\"\n- If you don't already have Xcode or Command Line Tools installed, a window will pop up. Press the **Install** button.\n- **Verify:** Type `g++` into Terminal and press enter. If the output is `clang: error: no input files`, then the installation was successful.\n\n### Linux\n\nThese programs are typically available through the default package manager for each Linux distribution. For example, we can use [APT](https://help.ubuntu.com/lts/serverguide/apt.html) on Ubuntu systems.\n - `sudo apt update`\n - `sudo apt install build-essential`\n - `sudo apt install gdb`\n\n### Windows\n[MinGW](http://www.mingw.org/) provides the necessary software.\n- Proceed from [Section 3.2 of these linked instructions](https://www.cs.odu.edu/~zeil/cs250PreTest/latest/Public/installingACompiler/#installing-the-mingw-compiler).",
              "instructor_notes": ""
            },
            {
              "id": 957713,
              "key": "2b624f0a-956a-4b92-86b9-7af6a3685b56",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Microsoft Visual Studio (VSCode):\n------\n**The instructions for this are the same for all machines:**\n- Go to the [Visual Studio Code download webpage](https://code.visualstudio.com/Download)\n- Select your operating system.",
              "instructor_notes": ""
            },
            {
              "id": 957714,
              "key": "1225d8b3-1688-4fc5-b6fe-7b2d43a7a74b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/November/5dd4448e_screen-shot-2019-11-19-at-11.37.25-am/screen-shot-2019-11-19-at-11.37.25-am.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1225d8b3-1688-4fc5-b6fe-7b2d43a7a74b",
              "caption": "",
              "alt": "",
              "width": 300,
              "height": 250,
              "instructor_notes": null
            },
            {
              "id": 957715,
              "key": "6ccf45e0-c39b-426a-8259-4b53c5277c02",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "- Click on the downloaded file\n- Complete the installation instructions.",
              "instructor_notes": ""
            },
            {
              "id": 957716,
              "key": "3acafc5a-d2cd-452e-bbee-76fa603ecea4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## VSCode C/C++ Extension\n------\n- Open VSCode\n- Navigate to VSCode extensions by clicking into the following menus:\n - Code > Preferences > Extensions\n\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 957720,
              "key": "a9e32cc2-a0b1-4d65-9185-4aa3e1f1cb1a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/November/5dd45b31_screen-shot-2019-11-19-at-1.13.05-pm/screen-shot-2019-11-19-at-1.13.05-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a9e32cc2-a0b1-4d65-9185-4aa3e1f1cb1a",
              "caption": "",
              "alt": "",
              "width": 500,
              "height": 160,
              "instructor_notes": null
            },
            {
              "id": 957719,
              "key": "45de70d2-e701-4763-8d26-37ab281c4af4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "- In the search bar that says \"*Search Extensions in Marketplace*\" type \"**C/C++**\"",
              "instructor_notes": ""
            },
            {
              "id": 957717,
              "key": "33182463-9165-460c-ab52-3e6f3f0081cf",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/November/5dd45a9a_screen-shot-2019-11-19-at-1.11.33-pm/screen-shot-2019-11-19-at-1.11.33-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/33182463-9165-460c-ab52-3e6f3f0081cf",
              "caption": "",
              "alt": "",
              "width": 1944,
              "height": 476,
              "instructor_notes": null
            },
            {
              "id": 957718,
              "key": "ec4386f6-7954-407f-833b-6776c7b31f25",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "- Select the C/C++ extension and press the **Install** button to install this extension.",
              "instructor_notes": ""
            },
            {
              "id": 957721,
              "key": "0ef96485-d8ba-409e-a8f9-2bcdbe9d0241",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## clang-format\n------\n- This is also a VSCode extension, so navigate to **Extensions** using the same process as the previous section.\n- In the search bar that says \"Search Extensions in Marketplace\", type: \"**clang-format**\"\n",
              "instructor_notes": ""
            },
            {
              "id": 957722,
              "key": "763d50ff-7d1b-4713-bdaf-0b1def6717f3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/November/5dd45bf0_screen-shot-2019-11-19-at-1.16.36-pm/screen-shot-2019-11-19-at-1.16.36-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/763d50ff-7d1b-4713-bdaf-0b1def6717f3",
              "caption": "",
              "alt": "",
              "width": 900,
              "height": 225,
              "instructor_notes": null
            },
            {
              "id": 958525,
              "key": "e241b4dc-270f-45bf-a9c0-204904bd5890",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "- Select the Clang-Format extension and press the **Install** button to install this extension.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 860933,
          "key": "255ad63c-a5e7-4699-b483-1ddc9b5e97c5",
          "title": "Editors",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "255ad63c-a5e7-4699-b483-1ddc9b5e97c5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900218,
              "key": "06fc1eab-0a88-4857-8d2d-16d5f2bc2245",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Editors\nThere are [many different C++ code editors](https://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments#C/C++), and in fact it is at least theoretically possible to develop C++ source code in any text editor.\n\n## Microsoft Visual Studio Code\n",
              "instructor_notes": ""
            },
            {
              "id": 900220,
              "key": "3d93899b-26d0-4890-a694-441632c341b6",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/July/5d2a959e_home-screenshot-linux/home-screenshot-linux.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/3d93899b-26d0-4890-a694-441632c341b6",
              "caption": "",
              "alt": "",
              "width": 617,
              "height": 520,
              "instructor_notes": null
            },
            {
              "id": 900219,
              "key": "c310def3-9a50-4e6c-bccf-5b32d3f0d357",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In this Nanodegree Program, we will demonstrate many of the programming examples using [Microsoft Visual Studio Code](https://code.visualstudio.com/). You are welcome, but not required, to use this editor.\n\nVisual Studio Code is a powerful, free, and [open-source](https://github.com/microsoft/vscode) editor that runs on [Linux, macOS, and Windows](https://code.visualstudio.com/download).\n\n>\"Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. It comes with built-in support for JavaScript, TypeScript and Node.js and has a rich ecosystem of extensions for other languages (such as C++, C#, Java, Python, PHP, Go) and runtimes (such as .NET and Unity). Begin your journey with VS Code with these [introductory videos](https://code.visualstudio.com/docs/introvideos/overview).\"\n>\n> [Microsoft](https://code.visualstudio.com/docs)\n\nIf you use Visual Studio Code to develop C++ applications, Microsoft suggests installing the free [C/C++ extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).",
              "instructor_notes": ""
            },
            {
              "id": 900227,
              "key": "573d382c-5997-4edc-921c-64006b3d1dee",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/July/5d2aab40_c-debug/c-debug.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/573d382c-5997-4edc-921c-64006b3d1dee",
              "caption": "",
              "alt": "",
              "width": 1920,
              "height": 1200,
              "instructor_notes": null
            },
            {
              "id": 900228,
              "key": "e33fb1e9-6cc1-40f1-bd04-cc8a8e9beb6c",
              "title": "Visual Studio Code Hello World",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "p5d3aduW430",
                "china_cdn_id": "p5d3aduW430.mp4"
              }
            }
          ]
        },
        {
          "id": 860934,
          "key": "510e0dcd-fc19-496f-860a-09c28fcb4870",
          "title": "Style",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "510e0dcd-fc19-496f-860a-09c28fcb4870",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900222,
              "key": "99b7260b-34b5-4d76-8c50-7ef0e3e2c27b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Style\nA consistent style (hopefully) helps improve and make your code more readable.\n\nThere are many different C++ styles, none of which is authoritative.\n* [C++ Core Guidlines: Naming and layout rules](http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#nl-naming-and-layout-rules)\n* [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html)\n* [Mozilla Coding Style: C/C++ practices](https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Coding_Style#CC_practices)\n\n## ClangFormat\n[`clang-format`](https://clang.llvm.org/docs/ClangFormat.html) is a command line text formatter that automatically reformats source code according to configurable set of policies. The tool includes several pre-configured styles, or you can create your own.\n\n`clang-format` is an open-source application that you can install on your system, or it is straightforward to install as a [Visual Studio Code extension](https://marketplace.visualstudio.com/).\n",
              "instructor_notes": ""
            },
            {
              "id": 900229,
              "key": "8dbd2b6d-fa19-40cb-9207-96c2f6aec15a",
              "title": "Visual Studio Code ClangFormat",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "PpHGgj5Ox-Q",
                "china_cdn_id": "PpHGgj5Ox-Q.mp4"
              }
            }
          ]
        },
        {
          "id": 860935,
          "key": "df387732-7b91-4a30-90e6-7097ca86a30b",
          "title": "Debugging",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "df387732-7b91-4a30-90e6-7097ca86a30b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 900224,
              "key": "8cf96da6-448b-4d0c-a8b4-096e03a38bf7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Debugging\nDebugging is an important part of software development! Therefore, learning how to use a debugger is an important part of becoming a software developer 😬\n\n## Debuggers\n[Debuggers](https://en.wikipedia.org/wiki/Debugger) are tools that allow you to pause the execution of your code in various locations, inspect the state of the program, and step through your code line-by-line. \n\n[GDB](https://www.gnu.org/software/gdb/) and [LLDB](https://lldb.llvm.org/) are two popular, open-source debuggers for C++. Integrating them into a code editor often makes debugging easier.\n\n## Visual Studio Code Debugging\nIn order to use Visual Studio Code's [debugger](https://code.visualstudio.com/docs/editor/debugging) with C++ files, you must install the free [C/C++ extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).",
              "instructor_notes": ""
            },
            {
              "id": 900230,
              "key": "7f89963c-dac5-4b00-bc0f-a0ce12517726",
              "title": "Visual Studio Code Debug",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "NnVIq_z-AEI",
                "china_cdn_id": "NnVIq_z-AEI.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}